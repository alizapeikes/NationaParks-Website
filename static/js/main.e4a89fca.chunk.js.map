{"version":3,"sources":["Images/weather.png","Images/NationalParkPic.png","Components/State/displayParkContext.jsx","Components/State/wishListContext.jsx","Components/Home/home.jsx","Components/Header/header.jsx","Components/State/thingsToDoContext.jsx","Components/explore/explore.jsx","Components/itinerary/itinerary.jsx","Components/WishList/wishList.jsx","Components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","DisplayParkContext","React","createContext","DisplayParkProvider","props","_useState","useState","_useState2","Object","slicedToArray","park","setPark","react_default","a","createElement","Provider","value","children","WishListContext","WishListProvider","wishList","setWishList","Home","page","setPage","_useState3","_useState4","parks","setParks","getParks","fetch","concat","then","response","json","data","useEffect","home_NationalParks","home_BottomStepperBar","States","SearchByState","Autocomplete","disablePortal","id","options","sx","width","renderInput","params","TextField","assign","label","SearchBar","_useState5","_useState6","searchWord","setSearchWord","className","Paper","component","display","alignItems","height","InputBase","ml","flex","placeholder","inputProps","aria-label","onChange","event","target","IconButton","type","onClick","console","log","Search_default","NationalParks","home_SearchBar","home_SearchByState","Box","justifyContent","marginRight","marginLeft","Grid","container","spacing","length","map","item","index","home_NationalParksCard","key","NationalParksCard","_React$useState","_React$useState2","openAlert","setOpenAlert","_useContext","useContext","_useState7","_useState8","alert","setAlert","xs","Card","maxWidth","CardActionArea","CardMedia","image","images","url","alt","CardContent","Typography","gutterBottom","variant","fullName","color","CardActions","home_IconAlert","Tooltip","title","toConsumableArray","findIndex","newWishList","addToWishList","FavoriteBorder_default","&:hover","home_QuickView","IconAlert","Collapse","in","Alert","action","size","Close_default","fontSize","mb","Transition","forwardRef","ref","Slide","direction","QuickView","_React$useState3","_React$useState4","open","setOpen","_useContext2","navigate","useNavigate","handleClose","Button","Dialog","TransitionComponent","keepMounted","onClose","aria-describedby","Carousel","DialogTitle","DialogContent","DialogContentText","description","DialogActions","AutoPlaySwipeableViews","autoPlay","SwipeableViews","theme","useTheme","_React$useState5","_React$useState6","activeStep","setActiveStep","flexGrow","axis","onChangeIndex","step","enableMouseEvents","Math","abs","overflow","src","altText","BottomStepperBar","_React$useState7","_React$useState8","setValue","updatePage","window","scrollTo","BottomNavigation","showLabels","newValue","BottomNavigationAction","icon","ArrowBack_default","ArrowForward_default","start","pages","path","Header","anchorElNav","setAnchorElNav","handleCloseNavMenu","react","AppBar","position","backgroundColor","Container","Toolbar","disableGutters","noWrap","mr","md","aria-controls","aria-haspopup","currentTarget","Menu_default","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","MenuItem","textAlign","my","ThingsTodoContext","ThingsTodoProvider","thingsTodo","setThingsTodo","Explore","currPark","setCurrPark","thingsTodoList","setThingsTodoList","choice","setChoice","setAlertData","parkCode","NPPic","rowSpacing","columnSpacing","sm","explore_SideNav","align","Divider","explore_Display","Display","explore_ThingsToDo","explore_Contact","explore_Arrival","explore_Weather","a11yProps","SideNav","bgcolor","marginTop","boxShadow","Tabs","orientation","Tab","ThingsToDo","explore_ThingToDoItem","ThingToDoItem","Stack","paddingTop","crops","fontWeight","fontFamily","fontStyle","paddingBottom","isReservationRequired","shortDescription","newThingsTodo","name","reservation","addToItinerary","Weather","weatherInfo","weatherPic","Contact","palette","mode","m","borderRadius","borderRight","borderLeft","List","contacts","phoneNumbers","ListItem","ListItemIcon","LocalPhone_default","ListItemText","primary","phoneNumber","mt","emailAddresses","Email_default","emailAddress","addresses","LocationOn_default","line2","line1","city","stateCode","postalCode","Directions_default","directionsInfo","Arrival","operatingHours","standardHours","sunday","monday","tuesday","wednesday","thursday","friday","saturday","entranceFees","cost","entrancePasses","Itinerary","method","enctype","itinerary_DisplayThingsTodo","DisplayThingsTodo","WishList","wishList_NationalParks","wishList_NationalParksCard","tempList","splice","removeFromWishList","RemoveCircleOutline_default","wishList_QuickView","wishList_Carousel","wishList_AutoPlaySwipeableViews","App","displayParkContext_DisplayParkProvider","wishListContext_WishListProvider","thingsToDoContext_ThingsTodoProvider","react_router_dom","header_Header","react_router","element","home_Home","explore_Explore","itinerary_Itinerary","wishList_WishList","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.e4a89fca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather.0f27f8ed.png\";","module.exports = __webpack_public_path__ + \"static/media/NationalParkPic.33467ecb.png\";","import React, { useState, useEffect } from \"react\";\r\n\r\nexport const DisplayParkContext = React.createContext();\r\n\r\nexport const DisplayParkProvider = (props) => {\r\n  const [park, setPark] = useState(\"\");\r\n  return (\r\n    <DisplayParkContext.Provider value={{ park, setPark }}>\r\n      {props.children}\r\n    </DisplayParkContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const WishListContext = React.createContext();\r\n\r\nexport const WishListProvider = (props) => {\r\n  const [wishList, setWishList] = useState([]);\r\n  return (\r\n    <WishListContext.Provider value={{ wishList, setWishList }}>\r\n      {props.children}\r\n    </WishListContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\n// import video from \"../../Images/parksvideo.mp4\";\r\nimport \"./home.css\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { DisplayParkContext } from \"../State/displayParkContext\";\r\nimport { WishListContext } from \"../State/wishListContext\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport {\r\n  Button,\r\n  CardActionArea,\r\n  CardActions,\r\n  Paper,\r\n  Slide,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Grid,\r\n  IconButton,\r\n  Alert,\r\n  Icon,\r\n  InputBase,\r\n  Divider,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nexport const Home = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [parks, setParks] = useState([]);\r\n  useEffect(() => {\r\n    getParks();\r\n  }, []);\r\n\r\n  function getParks() {\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/parks?start=${page}&api_key=${\"IwDmrGWpHFkUs5tLwy2Miv7L7M1nIoSndJyqltEk\"}&limit=50`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setParks(data.data));\r\n  }\r\n  return (\r\n    <div>\r\n      <NationalParks parks={parks} setParks={setParks} />\r\n      <BottomStepperBar page={page} setPage={setPage} getParks={getParks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst States = [\r\n  \"AK - Alaska\",\r\n  \"AL - Alabama\",\r\n  \"AR - Arkansas\",\r\n  \"AS - American Samoa\",\r\n  \"AZ - Arizona\",\r\n  \"CA - California\",\r\n  \"CO - Colorado\",\r\n  \"CT - Connecticut\",\r\n  \"DC - District of Columbia\",\r\n  \"DE - Delaware\",\r\n  \"FL - Florida\",\r\n  \"GA - Georgia\",\r\n  \"GU - Guam\",\r\n  \"HI - Hawaii\",\r\n  \"IA - Iowa\",\r\n  \"ID - Idaho\",\r\n  \"IL - Illinois\",\r\n  \"IN - Indiana\",\r\n  \"KS - Kansas\",\r\n  \"KY - Kentucky\",\r\n  \"LA - Louisiana\",\r\n  \"MA - Massachusetts\",\r\n  \"MD - Maryland\",\r\n  \"ME - Maine\",\r\n  \"MI - Michigan\",\r\n  \"MN - Minnesota\",\r\n  \"MO - Missouri\",\r\n  \"MS - Mississippi\",\r\n  \"MT - Montana\",\r\n  \"NC - North Carolina\",\r\n  \"ND - North Dakota\",\r\n  \"NE - Nebraska\",\r\n  \"NH - New Hampshire\",\r\n  \"NJ - New Jersey\",\r\n  \"NM - New Mexico\",\r\n  \"NV - Nevada\",\r\n  \"NY - New York\",\r\n  \"OH - Ohio\",\r\n  \"OK - Oklahoma\",\r\n  \"OR - Oregon\",\r\n  \"PA - Pennsylvania\",\r\n  \"PR - Puerto Rico\",\r\n  \"RI - Rhode Island\",\r\n  \"SC - South Carolina\",\r\n  \"SD - South Dakota\",\r\n  \"TN - Tennessee\",\r\n  \"TX - Texas\",\r\n  \"UT - Utah\",\r\n  \"VA - Virginia\",\r\n  \"VI - Virgin Islands\",\r\n  \"VT - Vermont\",\r\n  \"WA - Washington\",\r\n  \"WI - Wisconsin\",\r\n  \"WV - West Virginia\",\r\n  \"WY - Wyoming\",\r\n];\r\nconst SearchByState = () => {\r\n  return (\r\n    <Autocomplete\r\n      disablePortal\r\n      id=\"combo-box-demo\"\r\n      options={States}\r\n      sx={{ width: 300 }}\r\n      renderInput={(params) => (\r\n        <TextField id=\"standard-basic\" {...params} label=\"State\" />\r\n      )}\r\n    />\r\n  );\r\n};\r\nconst SearchBar = (props) => {\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  function handleChange(event) {\r\n    setSearchWord(event.target.value);\r\n  }\r\n  function updateParks() {\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/parks?q=${searchWord}&api_key=${\"IwDmrGWpHFkUs5tLwy2Miv7L7M1nIoSndJyqltEk\"}&limit=50`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => props.setParks(data.data))\r\n      .then(console.log(\"testing\" + searchWord));\r\n  }\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <Paper\r\n        className=\"paper\"\r\n        component=\"form\"\r\n        sx={{\r\n          p: \"2px 4px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: 500,\r\n          height: \"3.5em\",\r\n        }}\r\n      >\r\n        <InputBase\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Search by Keyword\"\r\n          inputProps={{ \"aria-label\": \"Search by Keyword\" }}\r\n          onChange={handleChange}\r\n        />\r\n        <IconButton\r\n          type=\"submit\"\r\n          sx={{ p: \"10px\" }}\r\n          aria-label=\"search\"\r\n          onClick={() => updateParks()}\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParks = (props) => {\r\n  return (\r\n    <div>\r\n      {/* <video autoPlay loop muted className=\"video\">\r\n        <source src={video} type=\"video/mp4\"></source>\r\n      </video> */}\r\n      <SearchBar getParks={props.setParks} setParks={props.setParks} />\r\n      <SearchByState />\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        sx={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"95%\" }}\r\n      >\r\n        <Grid container spacing={4}>\r\n          {props.parks.length === 0 ? (\r\n            <div>loading...</div>\r\n          ) : (\r\n            props.parks.map((item, index) => (\r\n              <NationalParksCard key={index} item={item} index={index} />\r\n            ))\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParksCard = (props) => {\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  const { wishList, setWishList } = useContext(WishListContext);\r\n  const [alert, setAlert] = useState(\"Park added to wishlist!\");\r\n  function addToWishList() {\r\n    const tempList = [...wishList];\r\n    const index = tempList.findIndex((park) => park.id === props.item.id);\r\n    if (index === -1) {\r\n      setAlert(\"Park added to Wish List!\");\r\n      const newWishList = [...wishList, props.item];\r\n      setWishList(newWishList);\r\n    } else {\r\n      setAlert(\"Park already in Wish List!\");\r\n    }\r\n    setOpenAlert(true);\r\n  }\r\n  return (\r\n    <Grid item xs={3}>\r\n      <Card\r\n        sx={{ maxWidth: 345, height: \"100%\" }}\r\n        key={props.index}\r\n        className=\"card\"\r\n      >\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"140\"\r\n            image={props.item.images[0].url}\r\n            alt=\"park\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {props.item.fullName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className=\"cardActions\">\r\n          <IconAlert\r\n            park={props.item}\r\n            openAlert={openAlert}\r\n            setOpenAlert={setOpenAlert}\r\n            alert={alert}\r\n          />\r\n          <Tooltip title=\"Add to Wish List\">\r\n            <IconButton onClick={() => addToWishList()}>\r\n              <FavoriteBorderIcon\r\n                sx={{ color: \"#1272D1\", \"&:hover\": { color: \"red\" } }}\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <QuickView item={props.item} />\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst IconAlert = (props) => {\r\n  function closeAlert() {\r\n    props.setOpenAlert(false);\r\n  }\r\n  return (\r\n    <Collapse in={props.openAlert}>\r\n      <Alert\r\n        action={\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              closeAlert();\r\n            }}\r\n          >\r\n            <CloseIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        }\r\n        sx={{ mb: 2 }}\r\n      >\r\n        {props.alert}\r\n      </Alert>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst QuickView = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { park, setPark } = useContext(DisplayParkContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const explorePark = () => {\r\n    setPark(props.item);\r\n    navigate(\"/explore\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        Quick View\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <Carousel item={props.item} />\r\n        <DialogTitle>{props.item.fullName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.item.description}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n          <Button\r\n            onClick={() => {\r\n              explorePark();\r\n            }}\r\n          >\r\n            Exlore Park\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nfunction Carousel(props) {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ /* maxWidth: 400,*/ flexGrow: 1 }}>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {props.item.images.map((step, index) => (\r\n          <div key={step.id}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <Box\r\n                component=\"img\"\r\n                sx={{\r\n                  height: 300,\r\n                  display: \"block\",\r\n                  // maxWidth: 400,\r\n                  overflow: \"hidden\",\r\n                  width: \"100%\",\r\n                }}\r\n                src={step.url}\r\n                alt={step.altText}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst BottomStepperBar = (props) => {\r\n  const [value, setValue] = React.useState(0);\r\n  function updatePage() {\r\n    props.getParks();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <BottomNavigation\r\n        showLabels\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n      >\r\n        <BottomNavigationAction\r\n          label=\"Previous\"\r\n          icon={<ArrowBackIcon />}\r\n          onClick={\r\n            props.page === 0\r\n              ? () => props.setPage(0)\r\n              : () => {\r\n                  props.setPage(props.page - 50);\r\n                  updatePage();\r\n                }\r\n          }\r\n        />\r\n        <BottomNavigationAction\r\n          label=\"Next\"\r\n          icon={<ArrowForwardIcon />}\r\n          onClick={\r\n            props.start === 466\r\n              ? () => props.setPage(466)\r\n              : () => {\r\n                  props.setPage(props.page + 50);\r\n                  updatePage();\r\n                }\r\n          }\r\n        />\r\n      </BottomNavigation>\r\n    </Box>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport \"./header.css\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst pages = [\r\n  { title: \"Home\", path: \"/\" },\r\n  { title: \"Explore A Park\", path: \"/explore\" },\r\n  { title: \"Create Itinerary\", path: \"/itinerary\" },\r\n  { title: \"Wish List\", path: \"/wishList\" },\r\n];\r\n\r\nexport const Header = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  let navigate = useNavigate();\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = (page) => {\r\n    setAnchorElNav(null);\r\n    navigate(page.path);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" sx={{ backgroundColor: \"#343E22\" }}>\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\r\n            >\r\n              National Parks\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: \"block\", md: \"none\" },\r\n                }}\r\n              >\r\n                {pages.map((page) => (\r\n                  <MenuItem\r\n                    key={page.title}\r\n                    onClick={() => handleCloseNavMenu(page)}\r\n                  >\r\n                    <Typography textAlign=\"center\">{page.title}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\r\n            >\r\n              National Parks\r\n            </Typography>\r\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n              {pages.map((page) => (\r\n                <Button\r\n                  key={page.title}\r\n                  onClick={() => handleCloseNavMenu(page)}\r\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n                >\r\n                  {page.title}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const ThingsTodoContext = React.createContext();\r\n\r\nexport const ThingsTodoProvider = (props) => {\r\n  const [thingsTodo, setThingsTodo] = useState([]);\r\n  return (\r\n    <ThingsTodoContext.Provider value={{ thingsTodo, setThingsTodo }}>\r\n      {props.children}\r\n    </ThingsTodoContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { DisplayParkContext } from \"../State/displayParkContext\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { CardActionArea } from \"@mui/material\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport QueryBuilderIcon from \"@mui/icons-material/QueryBuilder\";\r\nimport { Button } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport PropTypes from \"prop-types\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { shadows } from \"@mui/system\";\r\nimport DirectionsIcon from \"@mui/icons-material/Directions\";\r\nimport Container from \"@mui/material/Container\";\r\nimport \"./explore.css\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport { ThingsTodoContext } from \"../State/thingsToDoContext\";\r\nimport weatherPic from \"../../Images/weather.png\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport MovingText from \"react-moving-text\";\r\nimport NPPic from \"../../Images/NationalParkPic.png\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\r\n\r\nexport const Explore = () => {\r\n  const { park, setPark } = useContext(DisplayParkContext);\r\n  const [currPark, setCurrPark] = useState([]);\r\n  const [thingsTodoList, setThingsTodoList] = useState([]);\r\n  const [choice, setChoice] = useState(0);\r\n  const [alertData, setAlertData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    getPark();\r\n  }, []);\r\n  function getPark() {\r\n    console.log([park.parkCode]);\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/parks?parkCode=\r\n        ${\"park.parkCode\"}\r\n      &api_key=${\"8yqhe2WFRMWYNZgBFRmxnub058irC6R85P9uUSIE\"}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setCurrPark(data.data));\r\n\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/alerts?parkCode=\r\n          ${\"park.parkCode\"}\r\n        &api_key=${\"8yqhe2WFRMWYNZgBFRmxnub058irC6R85P9uUSIE\"}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setAlertData(data.data));\r\n\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/thingstodo?parkCode=${\r\n        park.parkCode\r\n      }&api_key=${\"IwDmrGWpHFkUs5tLwy2Miv7L7M1nIoSndJyqltEk\"}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setThingsTodoList(data.data));\r\n  }\r\n  return (\r\n    <div>\r\n      <img src={NPPic} alt={\"\"} width=\"100%\"></img>\r\n      {/* <Button onClick={() => getPark()}>hello</Button> */}\r\n      {/* <MovingAlerts alertData={alertData} /> */}\r\n\r\n      {currPark.length === 0 ? (\r\n        <div>loading...</div>\r\n      ) : (\r\n        <div>\r\n          <Grid\r\n            container\r\n            rowSpacing={1}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n          >\r\n            <Grid item xs={2} className=\"sideBar\">\r\n              <SideNav setChoice={setChoice} choice={choice} />\r\n            </Grid>\r\n            <Grid item xs={9.5}>\r\n              <Typography className=\"parkTitle\" variant=\"h2\" align=\"center\">\r\n                {park.fullName}\r\n              </Typography>\r\n              <Divider />\r\n              {park === \"\" ? (\r\n                <div>Please Choose a Park...</div>\r\n              ) : (\r\n                <div>\r\n                  <Display\r\n                    choice={choice}\r\n                    park={park}\r\n                    thingsTodoList={thingsTodoList}\r\n                    setThingsTodoList={setThingsTodoList}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Display = (props) => {\r\n  // useEffect(() => {\r\n  //   {\r\n  //     fetch(\r\n  //       `https://developer.nps.gov/api/v1/thingstodo?parkCode=\r\n  //     ${\"park.parkCode\"}\r\n  //   &api_key=${\"8yqhe2WFRMWYNZgBFRmxnub058irC6R85P9uUSIE\"}`\r\n  //     )\r\n  //       .then((response) => response.json())\r\n  //       .then((data) => props.setThingsTodoList(data.data));\r\n  //   }\r\n  // }, []);\r\n  switch (props.choice) {\r\n    case 0:\r\n      console.log(props.thingsTodoList);\r\n      return <ThingsToDo thingsTodoList={props.thingsTodoList} />;\r\n    case 1:\r\n      return <Contact park={props.park} />;\r\n    case 2:\r\n      return <Arrival park={props.park}></Arrival>;\r\n    case 3:\r\n      return <Weather park={props.park} />;\r\n  }\r\n};\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst SideNav = (props) => {\r\n  function handleChange(event, newValue) {\r\n    props.setChoice(newValue);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 2,\r\n        bgcolor: \"background.paper\",\r\n        display: \"flex\",\r\n        // height: 224,\r\n        marginLeft: \"10%\",\r\n        marginTop: \"65%\",\r\n        boxShadow: 1,\r\n      }}\r\n    >\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={props.choice}\r\n        onChange={handleChange}\r\n        aria-label=\"Vertical tabs example\"\r\n        // sx={{ borderRight: 1, borderColor: \"divider\" }}\r\n      >\r\n        <Tab className=\"tab\" label=\"Things To Do\" {...a11yProps(0)} />\r\n        <Tab className=\"tab\" label=\"Contact\" {...a11yProps(1)} />\r\n        <Tab className=\"tab\" label=\"Arrival Info\" {...a11yProps(2)} />\r\n        <Tab className=\"tab\" label=\"Weather\" {...a11yProps(3)} />\r\n        {/* <Tab className=\"tab\" label=\"Item five\" {...a11yProps(4)} />\r\n        <Tab className=\"tab\" label=\"Item Six\" {...a11yProps(5)} />\r\n        <Tab className=\"tab\" label=\"Item Seven\" {...a11yProps(6)} /> */}\r\n      </Tabs>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ThingsToDo = (props) => {\r\n  const { thingsTodo, setThingsTodo } = useContext(ThingsTodoContext);\r\n\r\n  return (\r\n    <div>\r\n      <Typography\r\n        marginTop=\"5%\"\r\n        gutterBottom\r\n        variant=\"h4\"\r\n        component=\"div\"\r\n        align=\"center\"\r\n      >\r\n        Things Todo\r\n      </Typography>\r\n      {props.thingsTodoList.length !== 0 ? (\r\n        props.thingsTodoList.map((item, index) => (\r\n          <ThingToDoItem\r\n            key={index}\r\n            item={item}\r\n            thingsTodo={thingsTodo}\r\n            setThingsTodo={setThingsTodo}\r\n          />\r\n        ))\r\n      ) : (\r\n        <div>No Things Todo Listed for the Park Selected</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ThingToDoItem = (props) => {\r\n  function addToItinerary() {\r\n    const newThingsTodo = [\r\n      ...props.thingsTodo,\r\n      {\r\n        name: props.item.title,\r\n        description: props.item.shortDescription,\r\n        reservation: props.item.isReservationRequired,\r\n        image: props.item.images[0].crops[0].url,\r\n      },\r\n    ];\r\n    props.setThingsTodo(newThingsTodo);\r\n    console.log(props.thingsTodo);\r\n  }\r\n  return (\r\n    <div>\r\n      <Stack paddingTop=\"5%\" direction=\"row\" spacing={2}>\r\n        <img\r\n          height=\"10%\"\r\n          width=\"50%\"\r\n          src={props.item.images[0].crops[0].url}\r\n          alt={props.item.images[0].altText}\r\n        ></img>\r\n        <div className=\"desc-text-and-button\">\r\n          <div className=\"description-text\">\r\n            <Typography\r\n              fontWeight=\"bold\"\r\n              sx={{\r\n                fontFamily: \"Helvetica\",\r\n              }}\r\n            >\r\n              {props.item.title}\r\n            </Typography>\r\n            <Typography sx={{ fontStyle: \"italic\", paddingBottom: \"3%\" }}>\r\n              Reservation Required:\r\n              {props.item.isReservationRequired === \"true\" ? \" Yes\" : \" No\"}\r\n            </Typography>\r\n            <Typography>{props.item.shortDescription}</Typography>\r\n          </div>\r\n          <div className=\"add-button-wrapper\">\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ backgroundColor: \"#4B90F0\" }}\r\n              onClick={() => addToItinerary()}\r\n            >\r\n              Add To Itinerary\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className=\"centerItem\">\r\n      <Card className=\"centerItem\" sx={{ maxWidth: \"80%\", marginTop: \"5%\" }}>\r\n        <CardActionArea>\r\n          <CardContent>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h4\"\r\n              component=\"div\"\r\n              align=\"center\"\r\n            >\r\n              Weather\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"text.secondary\" align=\"center\">\r\n              {props.park.weatherInfo}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"180\"\r\n            image={weatherPic}\r\n            alt=\"Weather Pic\"\r\n          />\r\n        </CardActionArea>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n// const MovingAlerts = (props) => {\r\n//   return (\r\n//     <div>\r\n//       <MovingText\r\n//         className=\"movingText\"\r\n//         type=\"slideOutToRight\"\r\n//         duration=\"50s\"\r\n//         delay=\"0s\"\r\n//         direction=\"normal\"\r\n//         timing=\"ease\"\r\n//         iteration=\"infinite\"\r\n//         fillMode=\"none\"\r\n//       >\r\n//         {props.alertData[0].title}\r\n//       </MovingText>\r\n//     </div>\r\n//   );\r\n// };\r\nconst Contact = (props) => {\r\n  return (\r\n    <div>\r\n      <Container className=\"centerItem\">\r\n        <Box\r\n          className=\"centerItem\"\r\n          sx={{\r\n            boxShadow: 2,\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\r\n            p: 10,\r\n            m: 1,\r\n            borderRadius: 2,\r\n            // textAlign: \"center\",\r\n            width: \"70%\",\r\n            borderRight: \"auto\",\r\n            borderLeft: \"auto\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h4\" component=\"div\" align=\"center\">\r\n            Contact\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Phone\r\n            </Typography>\r\n            <List>\r\n              {props.park.contacts.phoneNumbers.map((item, index) => (\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <LocalPhoneIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={item.phoneNumber} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n          <div>\r\n            <Typography sx={{ mt: 2 }} variant=\"h5\" component=\"div\">\r\n              Email\r\n            </Typography>\r\n            <List>\r\n              {props.park.contacts.emailAddresses.map((item, index) => (\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <EmailIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={item.emailAddress} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Addresses\r\n            </Typography>\r\n            <List>\r\n              {props.park.addresses.map((item, index) => (\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <LocationOnIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      (item.line2 && item.line2 + \": \") +\r\n                      item.line1 +\r\n                      \"\\n\" +\r\n                      item.city +\r\n                      \", \" +\r\n                      item.stateCode +\r\n                      \" \" +\r\n                      item.postalCode\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n          <div>\r\n            <Typography sx={{ mt: 2 }} variant=\"h5\" component=\"div\">\r\n              Directions\r\n            </Typography>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <DirectionsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={props.park.directionsInfo} />\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Arrival = (props) => {\r\n  return (\r\n    <div>\r\n      <Container className=\"centerItem\">\r\n        <Box\r\n          className=\"centerItem\"\r\n          sx={{\r\n            boxShadow: 2,\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\r\n            p: 10,\r\n            m: 1,\r\n            borderRadius: 2,\r\n            // textAlign: \"center\",\r\n            width: \"70%\",\r\n            borderRight: \"auto\",\r\n            borderLeft: \"auto\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h4\" component=\"div\" align=\"center\">\r\n            Arrival Info\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Operating Hours\r\n            </Typography>\r\n            {props.park.operatingHours.map((item, index) => (\r\n              <List>\r\n                <ListItem key={index}>\r\n                  <ListItemText primary={item.description} />\r\n                </ListItem>\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={\"Sunday: \" + item.standardHours.sunday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={\"Monday: \" + item.standardHours.monday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={\"Tuesday: \" + item.standardHours.tuesday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={\"Wednesday: \" + item.standardHours.wednesday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={\"Thursday: \" + item.standardHours.thursday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={\"Friday: \" + item.standardHours.friday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index}>\r\n                  <ListItemText\r\n                    primary={\"Saturday: \" + item.standardHours.saturday}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Entrance Fees\r\n            </Typography>\r\n            <List>\r\n              {props.park.entranceFees.map((item, index) => (\r\n                <div>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Title: \" + item.title} />\r\n                  </ListItem>\r\n\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Descrption: \" + item.description} />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Cost: \" + item.cost} />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Entrance Passes\r\n            </Typography>\r\n            <List>\r\n              {props.park.entrancePasses.map((item, index) => (\r\n                <div>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Title: \" + item.title} />\r\n                  </ListItem>\r\n\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Descrption: \" + item.description} />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Cost: \" + item.cost} />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Typography, Stack, Button } from \"@mui/material\";\r\nimport { ThingsTodoContext } from \"../State/thingsToDoContext\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport \"./itinerary.css\";\r\n\r\nexport const Itinerary = () => {\r\n  function converToPDF() {\r\n    //fetch(`https://v2.convertapi.com/convert/web/to/pdf?Secret=5Gf4ohFCNhAoRjcI`).then(.then((response) => response.json()))\r\n    //     fetch(\r\n    //       `https://developer.nps.gov/api/v1/thingstodo?parkCode=\r\n    //     ${\"park.parkCode\"}\r\n    //   &api_key=${\"8yqhe2WFRMWYNZgBFRmxnub058irC6R85P9uUSIE\"}`\r\n    //     )\r\n    //       .then((response) => response.json())\r\n    //       .then((data) => props.setThingsTodoList(data.data));\r\n  }\r\n  return (\r\n    <Container>\r\n      <Box\r\n        sx={{\r\n          boxShadow: 3,\r\n          bgcolor: (theme) =>\r\n            theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\r\n          p: 10,\r\n          m: 5,\r\n          borderRadius: 2,\r\n          //textAlign: \"center\",\r\n          width: \"80%\",\r\n          borderRight: \"auto\",\r\n          borderLeft: \"auto\",\r\n        }}\r\n      >\r\n        <Typography sx={{ fontFamily: \"Georgia\" }} variant=\"h3\" align=\"center\">\r\n          {\" \"}\r\n          My Itinerary\r\n        </Typography>\r\n        <Button>Hello</Button>\r\n        <body>\r\n          <form\r\n            action=\"https://v2.convertapi.com/convert/web/to/pdf?Secret=5Gf4ohFCNhAoRjcI&download=attachment\"\r\n            method=\"post\"\r\n            enctype=\"multipart/form-data\"\r\n          >\r\n            <input\r\n              type=\"hidden\"\r\n              name=\"Url\"\r\n              value=\"https://alizapeikes.github.io/NationaParks-Website/#/itinerary\"\r\n            />\r\n            <input type=\"hidden\" name=\"FileName\" value=\"Itinerary\" />\r\n            <input type=\"submit\" value=\"Convert file\" />\r\n          </form>\r\n        </body>\r\n        <DisplayThingsTodo />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst DisplayThingsTodo = () => {\r\n  const { thingsTodo, setThingsTodo } = useContext(ThingsTodoContext);\r\n  return (\r\n    <div>\r\n      {thingsTodo.map((item, index) => (\r\n        <div>\r\n          <Stack\r\n            className=\"itineraryList\"\r\n            width=\"70%\"\r\n            paddingTop=\"5%\"\r\n            direction=\"row\"\r\n            spacing={2}\r\n          >\r\n            <CardMedia\r\n              component=\"img\"\r\n              height=\"140\"\r\n              image={item.image}\r\n              alt=\"parkImage\"\r\n              className=\"roundImage\"\r\n            />\r\n            <div>\r\n              <Typography\r\n                fontWeight=\"bold\"\r\n                sx={{\r\n                  fontFamily: \"Georgia\",\r\n                  color: \"#13352C\",\r\n                  fontSize: \"1.2em\",\r\n                }}\r\n              >\r\n                {item.name}\r\n              </Typography>\r\n              <Typography>{item.description}</Typography>\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { DisplayParkContext } from \"../State/displayParkContext\";\r\nimport { WishListContext } from \"../State/wishListContext\";\r\nimport { WishListProvider } from \"../State/wishListContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nimport {\r\n  Button,\r\n  CardActionArea,\r\n  CardActions,\r\n  Paper,\r\n  Slide,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Grid,\r\n  IconButton,\r\n  Alert,\r\n  InputBase,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nexport const WishList = () => {\r\n  const { wishList, setWishList } = useContext(WishListContext);\r\n\r\n  return (\r\n    <div>\r\n      <NationalParks wishList={wishList} setWishList={setWishList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParks = (props) => {\r\n  return (\r\n    <div>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        sx={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"95%\" }}\r\n      >\r\n        <Grid container spacing={4}>\r\n          {props.wishList.length === 0 ? (\r\n            <div>WishList is Empty.</div>\r\n          ) : (\r\n            props.wishList.map((item, index) => (\r\n              <NationalParksCard\r\n                key={index}\r\n                item={item}\r\n                index={index}\r\n                setWishList={props.setWishList}\r\n                wishList={props.wishList}\r\n              />\r\n            ))\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParksCard = (props) => {\r\n  function removeFromWishList() {\r\n    const tempList = [...props.wishList];\r\n    const index = tempList.findIndex((park) => park.id === props.item.id);\r\n    tempList.splice(index, 1);\r\n    props.setWishList(tempList);\r\n  }\r\n  return (\r\n    <Grid item xs={3}>\r\n      <Card sx={{ maxWidth: 345, height: \"100%\" }} key={props.index}>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"140\"\r\n            image={props.item.images[0].url}\r\n            alt=\"park\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {props.item.fullName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className=\"cardActions\">\r\n          <Tooltip title=\"Remove from Wish List\">\r\n            <IconButton onClick={() => removeFromWishList()}>\r\n              <RemoveCircleOutlineIcon\r\n                sx={{ color: \"#1272D1\", \"&:hover\": { color: \"red\" } }}\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <QuickView item={props.item} />\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst QuickView = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { park, setPark } = useContext(DisplayParkContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const explorePark = () => {\r\n    setPark(props.item);\r\n    navigate(\"/explore\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        Quick View\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <Carousel item={props.item} />\r\n        <DialogTitle>{props.item.fullName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.item.description}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n          <Button\r\n            onClick={() => {\r\n              explorePark();\r\n            }}\r\n          >\r\n            Exlore Park\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nfunction Carousel(props) {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ /* maxWidth: 400,*/ flexGrow: 1 }}>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {props.item.images.map((step, index) => (\r\n          <div key={step.id}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <Box\r\n                component=\"img\"\r\n                sx={{\r\n                  height: 300,\r\n                  display: \"block\",\r\n                  // maxWidth: 400,\r\n                  overflow: \"hidden\",\r\n                  width: \"100%\",\r\n                }}\r\n                src={step.url}\r\n                alt={step.altText}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Home} from '../Home/home';\r\nimport {Header} from '../Header/header';\r\nimport {Explore} from '../explore/explore'\r\nimport {Itinerary } from '../itinerary/itinerary';\r\nimport {WishList} from '../WishList/wishList'\r\nimport {DisplayParkProvider} from \"../State/displayParkContext\";\r\nimport {WishListProvider } from '../State/wishListContext';\r\nimport {ThingsTodoProvider} from '../State/thingsToDoContext';\r\nimport {HashRouter, Routes, Route,} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DisplayParkProvider>\r\n        <WishListProvider>\r\n          <ThingsTodoProvider>\r\n          <HashRouter>\r\n            <Header/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n               <Route path=\"/explore\" element={<Explore />} />  \r\n                <Route path=\"/itinerary\" element={<Itinerary />} /> \r\n                <Route path=\"/wishList\" element={<WishList />} /> \r\n            </Routes>\r\n          </HashRouter>\r\n          </ThingsTodoProvider>\r\n          </WishListProvider>\r\n        </DisplayParkProvider >\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from '../src/Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}