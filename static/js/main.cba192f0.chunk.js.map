{"version":3,"sources":["Images/weather.png","Images/NationalParkPic.png","Components/State/thingsToDoContext.jsx","Components/State/displayParkContext.jsx","Components/State/wishListContext.jsx","Components/Home/home.jsx","Components/Header/header.jsx","Components/explore/explore.jsx","Components/itinerary/itinerary.jsx","Components/Footer/footer.jsx","Components/WishList/wishList.jsx","Components/App/App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","ThingsTodoContext","React","createContext","ThingsTodoProvider","props","_useState","useState","name","list","_useState2","Object","slicedToArray","thingsTodo","setThingsTodo","react_default","a","createElement","Provider","value","children","changeDisplayedParkContext","state","action","parkInfo","DisplayParkContext","initialPark","DisplayParkProvider","_useReducer","useReducer","_useReducer2","parkStateInfo","dispatchSetPark","parkState","parkCodeDispatch","WishListContext","WishListProvider","wishList","setWishList","Home","page","setPage","_useState3","_useState4","parks","setParks","getParks","fetch","concat","then","response","json","data","useEffect","home_NationalParks","home_BottomStepperBar","SearchBar","_useState5","_useState6","searchWord","setSearchWord","className","Paper","component","sx","display","alignItems","width","height","InputBase","ml","flex","placeholder","inputProps","aria-label","onChange","event","target","IconButton","type","onClick","console","log","Search_default","NationalParks","home_SearchBar","Box","justifyContent","marginRight","marginLeft","Grid","container","spacing","length","map","item","index","home_NationalParksCard","key","NationalParksCard","_React$useState","_React$useState2","openAlert","setOpenAlert","_useContext","useContext","_useState7","_useState8","alertText","setAlertText","_useState9","_useState10","alertType","setAlertType","xs","Card","maxWidth","CardActionArea","CardMedia","image","images","url","alt","CardContent","Typography","gutterBottom","variant","fullName","color","CardActions","home_IconAlert","park","alert","Tooltip","title","toConsumableArray","findIndex","id","newWishList","addToWishList","FavoriteBorder_default","&:hover","home_QuickView","IconAlert","Collapse","in","Alert","severity","size","Close_default","fontSize","mb","Transition","forwardRef","ref","Slide","assign","direction","QuickView","_React$useState3","_React$useState4","open","setOpen","parkContext","_useContext2","navigate","useNavigate","handleClose","Button","Dialog","TransitionComponent","keepMounted","onClose","aria-describedby","Carousel","DialogTitle","DialogContent","DialogContentText","description","DialogActions","AutoPlaySwipeableViews","autoPlay","SwipeableViews","theme","useTheme","_React$useState5","_React$useState6","activeStep","setActiveStep","flexGrow","axis","onChangeIndex","step","enableMouseEvents","Math","abs","overflow","src","altText","BottomStepperBar","_React$useState7","_React$useState8","setValue","updatePage","window","scrollTo","margin","BottomNavigation","showLabels","newValue","BottomNavigationAction","label","icon","ArrowBack_default","ArrowForward_default","start","pages","path","Header","anchorElNav","setAnchorElNav","handleCloseNavMenu","react","AppBar","position","backgroundColor","Container","Toolbar","disableGutters","noWrap","mr","md","aria-controls","aria-haspopup","currentTarget","Menu_default","Menu","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","Boolean","MenuItem","textAlign","my","Explore","currPark","setCurrPark","thingsTodoList","setThingsTodoList","choice","setChoice","setAlertData","parkCode","NPPic","rowSpacing","columnSpacing","sm","explore_SideNav","align","Divider","explore_Display","Display","explore_ThingsToDo","explore_Contact","explore_Arrival","explore_Weather","a11yProps","SideNav","bgcolor","marginTop","boxShadow","Tabs","orientation","Tab","ThingsToDo","palette","mode","m","borderRadius","borderRight","borderLeft","explore_ThingToDoItem","ThingToDoItem","_useState11","_useState12","_useState13","_useState14","Stack","paddingTop","minHeight","minWidth","fontWeight","fontFamily","fontStyle","paddingBottom","isReservationRequired","shortDescription","todo","newThingsTodo","reservation","addToItinerary","explore_AddedToItineraryAlert","AddedToItineraryAlert","Weather","weatherInfo","weatherPic","Contact","List","contacts","phoneNumbers","ListItem","ListItemIcon","LocalPhone_default","ListItemText","primary","phoneNumber","mt","emailAddresses","Email_default","emailAddress","addresses","LocationOn_default","line2","line1","city","stateCode","postalCode","Directions_default","directionsInfo","Arrival","operatingHours","standardHours","sunday","monday","tuesday","wednesday","thursday","friday","saturday","entranceFees","cost","entrancePasses","Itinerary","itinerary_DisplayThingsTodo","DisplayThingsTodo","Footer","bottom","left","right","elevation","CssBaseline","WishList","wishList_NationalParks","wishList_NationalParksCard","flexDirection","tempList","splice","removeFromWishList","RemoveCircleOutline_default","wishList_QuickView","setPark","wishList_Carousel","wishList_AutoPlaySwipeableViews","App","displayParkContext_DisplayParkProvider","wishListContext_WishListProvider","thingsToDoContext_ThingsTodoProvider","react_router_dom","header_Header","react_router","element","home_Home","explore_Explore","itinerary_Itinerary","wishList_WishList","footer_Footer","reportWebVitals","onPerfEntry","Function","e","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.cba192f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/weather.0f27f8ed.png\";","module.exports = __webpack_public_path__ + \"static/media/NationalParkPic.33467ecb.png\";","import React, { useState } from \"react\";\r\n\r\nexport const ThingsTodoContext = React.createContext();\r\n\r\nexport const ThingsTodoProvider = (props) => {\r\n  const [thingsTodo, setThingsTodo] = useState({ name: \"\", list: [] });\r\n  return (\r\n    <ThingsTodoContext.Provider value={{ thingsTodo, setThingsTodo }}>\r\n      {props.children}\r\n    </ThingsTodoContext.Provider>\r\n  );\r\n};\r\n","import React, { useReducer } from \"react\";\r\n\r\nconst changeDisplayedParkContext = (state, action) => {\r\n  const newParkInfo = action.parkInfo;\r\n  return newParkInfo;\r\n};\r\n\r\nexport const DisplayParkContext = React.createContext();\r\n\r\nconst initialPark = {};\r\n\r\nexport const DisplayParkProvider = (props) => {\r\n  const [parkStateInfo, dispatchSetPark] = useReducer(\r\n    changeDisplayedParkContext,\r\n    initialPark\r\n  );\r\n  return (\r\n    <DisplayParkContext.Provider\r\n      value={{ parkState: parkStateInfo, parkCodeDispatch: dispatchSetPark }}\r\n    >\r\n      {props.children}\r\n    </DisplayParkContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const WishListContext = React.createContext();\r\n\r\nexport const WishListProvider = (props) => {\r\n  const [wishList, setWishList] = useState([]);\r\n  return (\r\n    <WishListContext.Provider value={{ wishList, setWishList }}>\r\n      {props.children}\r\n    </WishListContext.Provider>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\n// import video from \"../../Images/parksvideo.mp4\";\r\nimport { ThingsTodoContext } from \"../State/thingsToDoContext\";\r\nimport \"./home.css\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport BottomNavigationAction from \"@mui/material/BottomNavigationAction\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { DisplayParkContext } from \"../State/displayParkContext\";\r\nimport { WishListContext } from \"../State/wishListContext\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport {\r\n  Button,\r\n  CardActionArea,\r\n  CardActions,\r\n  Paper,\r\n  Slide,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Grid,\r\n  IconButton,\r\n  Alert,\r\n  Icon,\r\n  InputBase,\r\n  Divider,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\n\r\nexport const Home = () => {\r\n  const [page, setPage] = useState(0);\r\n  const [parks, setParks] = useState([]);\r\n  useEffect(() => {\r\n    getParks();\r\n  }, []);\r\n\r\n  function getParks() {\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/parks?start=${page}&api_key=${\"IwDmrGWpHFkUs5tLwy2Miv7L7M1nIoSndJyqltEk\"}&limit=50`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setParks(data.data));\r\n  }\r\n  return (\r\n    <div>\r\n      <NationalParks parks={parks} setParks={setParks} />\r\n      <BottomStepperBar page={page} setPage={setPage} getParks={getParks} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SearchBar = (props) => {\r\n  const [searchWord, setSearchWord] = useState(\"\");\r\n  function handleChange(event) {\r\n    setSearchWord(event.target.value);\r\n  }\r\n  function updateParks() {\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/parks?q=${searchWord}&api_key=${\"IwDmrGWpHFkUs5tLwy2Miv7L7M1nIoSndJyqltEk\"}&limit=50`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => props.setParks(data.data))\r\n      .then(console.log(\"testing\" + searchWord));\r\n  }\r\n  return (\r\n    <div className=\"searchBar\">\r\n      <Paper\r\n        className=\"paper\"\r\n        component=\"form\"\r\n        sx={{\r\n          p: \"2px 4px\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          width: 500,\r\n          height: \"3.5em\",\r\n        }}\r\n      >\r\n        <InputBase\r\n          sx={{ ml: 1, flex: 1 }}\r\n          placeholder=\"Search by Keyword\"\r\n          inputProps={{ \"aria-label\": \"Search by Keyword\" }}\r\n          onChange={handleChange}\r\n        />\r\n        <IconButton\r\n          type=\"submit\"\r\n          sx={{ p: \"10px\" }}\r\n          aria-label=\"search\"\r\n          onClick={() => updateParks()}\r\n        >\r\n          <SearchIcon />\r\n        </IconButton>\r\n      </Paper>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParks = (props) => {\r\n  return (\r\n    <div>\r\n      {/* <video autoPlay loop muted className=\"video\">\r\n        <source src=\"https://youtu.be/Z1dMZDNZWCw\" type=\"video/mp4\"></source>\r\n      </video> */}\r\n      {/* <iframe\r\n        width=\"560\"\r\n        height=\"315\"\r\n        //src=\"https://www.youtube.com/embed/Z1dMZDNZWCw?autoplay=1&controls=0&playlist=Z1dMZDNZWCw&loop=1&ing=1\"\r\n        src=\"https://www.youtube.com/embed/Z1dMZDNZWCw?rel=0&modestbranding=1&autohide=1&showinfo=0&controls=0\"\r\n        title=\"YouTube video player\"\r\n        frameborder=\"0\"\r\n        allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n        allowfullscreen\r\n      ></iframe> */}\r\n      <SearchBar getParks={props.setParks} setParks={props.setParks} />\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        justifyContent=\"center\"\r\n        sx={{ marginRight: \"auto\", marginLeft: \"auto\", width: \"95%\" }}\r\n      >\r\n        <Grid container spacing={4}>\r\n          {props.parks.length === 0 ? (\r\n            <div>loading...</div>\r\n          ) : (\r\n            props.parks.map((item, index) => (\r\n              <NationalParksCard key={index} item={item} index={index} />\r\n            ))\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParksCard = (props) => {\r\n  const [openAlert, setOpenAlert] = React.useState(false);\r\n  const { wishList, setWishList } = useContext(WishListContext);\r\n  const [alertText, setAlertText] = useState(\"Park added to wishlist!\");\r\n  const [alertType, setAlertType] = useState(\"success\");\r\n  function addToWishList() {\r\n    const tempList = [...wishList];\r\n    const index = tempList.findIndex((park) => park.id === props.item.id);\r\n    if (index === -1) {\r\n      const newWishList = [...wishList, props.item];\r\n      setWishList(newWishList);\r\n      setAlertText(\"Park added to Wish List!\");\r\n      setAlertType(\"success\");\r\n    } else {\r\n      setAlertText(\"Park already in Wish List!\");\r\n      setAlertType(\"info\");\r\n    }\r\n    setOpenAlert(true);\r\n  }\r\n  return (\r\n    <Grid item xs={3}>\r\n      <Card\r\n        sx={{ maxWidth: 345, height: \"100%\" }}\r\n        key={props.index}\r\n        className=\"card\"\r\n      >\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"140\"\r\n            image={props.item.images[0].url}\r\n            alt=\"park\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {props.item.fullName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className=\"cardActions\">\r\n          <IconAlert\r\n            park={props.item}\r\n            openAlert={openAlert}\r\n            setOpenAlert={setOpenAlert}\r\n            alert={alertText}\r\n            alertType={alertType}\r\n          />\r\n          <Tooltip title=\"Add to Wish List\">\r\n            <IconButton onClick={() => addToWishList()}>\r\n              <FavoriteBorderIcon\r\n                sx={{ color: \"#1272D1\", \"&:hover\": { color: \"red\" } }}\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <QuickView item={props.item} />\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst IconAlert = (props) => {\r\n  function closeAlert() {\r\n    props.setOpenAlert(false);\r\n  }\r\n  return (\r\n    <Collapse in={props.openAlert}>\r\n      <Alert\r\n        severity={props.alertType}\r\n        action={\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            color=\"inherit\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              closeAlert();\r\n            }}\r\n          >\r\n            <CloseIcon fontSize=\"inherit\" />\r\n          </IconButton>\r\n        }\r\n        sx={{ mb: 2 }}\r\n      >\r\n        {props.alert}\r\n      </Alert>\r\n    </Collapse>\r\n  );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst QuickView = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const parkContext = useContext(DisplayParkContext);\r\n  const { thingsTodo, setThingsTodo } = useContext(ThingsTodoContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const explorePark = () => {\r\n    parkContext.parkCodeDispatch({ parkInfo: props.item });\r\n    setThingsTodo({ name: props.item.fullName, list: [] });\r\n    navigate(\"/explore\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        Quick View\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <Carousel item={props.item} />\r\n        <DialogTitle>{props.item.fullName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.item.description}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n          <Button\r\n            onClick={() => {\r\n              explorePark();\r\n            }}\r\n          >\r\n            Exlore Park\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nfunction Carousel(props) {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ /* maxWidth: 400,*/ flexGrow: 1 }}>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {props.item.images.map((step, index) => (\r\n          <div key={step.id}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <Box\r\n                component=\"img\"\r\n                sx={{\r\n                  height: 300,\r\n                  display: \"block\",\r\n                  // maxWidth: 400,\r\n                  overflow: \"hidden\",\r\n                  width: \"100%\",\r\n                }}\r\n                src={step.url}\r\n                alt={step.altText}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n    </Box>\r\n  );\r\n}\r\n\r\nconst BottomStepperBar = (props) => {\r\n  const [value, setValue] = React.useState(0);\r\n  function updatePage() {\r\n    props.getParks();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  return (\r\n    <Box margin=\"2%\">\r\n      <BottomNavigation\r\n        showLabels\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n      >\r\n        <BottomNavigationAction\r\n          label=\"Previous\"\r\n          icon={<ArrowBackIcon />}\r\n          onClick={\r\n            props.page === 0\r\n              ? () => props.setPage(0)\r\n              : () => {\r\n                  props.setPage(props.page - 50);\r\n                  updatePage();\r\n                }\r\n          }\r\n        />\r\n        <BottomNavigationAction\r\n          label=\"Next\"\r\n          icon={<ArrowForwardIcon />}\r\n          onClick={\r\n            props.start === 466\r\n              ? () => props.setPage(466)\r\n              : () => {\r\n                  props.setPage(props.page + 50);\r\n                  updatePage();\r\n                }\r\n          }\r\n        />\r\n      </BottomNavigation>\r\n    </Box>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport \"./header.css\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Menu from \"@mui/material/Menu\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport Container from \"@mui/material/Container\";\r\nimport Button from \"@mui/material/Button\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst pages = [\r\n  { title: \"Home\", path: \"/\" },\r\n  { title: \"Explore A Park\", path: \"/explore\" },\r\n  { title: \"My Itinerary\", path: \"/itinerary\" },\r\n  { title: \"Wish List\", path: \"/wishList\" },\r\n];\r\n\r\nexport const Header = () => {\r\n  const [anchorElNav, setAnchorElNav] = React.useState(null);\r\n  let navigate = useNavigate();\r\n\r\n  const handleOpenNavMenu = (event) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseNavMenu = (page) => {\r\n    setAnchorElNav(null);\r\n    navigate(page.path);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"static\" sx={{ backgroundColor: \"#343E22\" }}>\r\n        <Container maxWidth=\"xl\">\r\n          <Toolbar disableGutters>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ mr: 2, display: { xs: \"none\", md: \"flex\" } }}\r\n            >\r\n              National Parks\r\n            </Typography>\r\n\r\n            <Box sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}>\r\n              <IconButton\r\n                size=\"large\"\r\n                aria-label=\"account of current user\"\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleOpenNavMenu}\r\n                color=\"inherit\"\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Menu\r\n                id=\"menu-appbar\"\r\n                anchorEl={anchorElNav}\r\n                anchorOrigin={{\r\n                  vertical: \"bottom\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                keepMounted\r\n                transformOrigin={{\r\n                  vertical: \"top\",\r\n                  horizontal: \"left\",\r\n                }}\r\n                open={Boolean(anchorElNav)}\r\n                onClose={handleCloseNavMenu}\r\n                sx={{\r\n                  display: { xs: \"block\", md: \"none\" },\r\n                }}\r\n              >\r\n                {pages.map((page) => (\r\n                  <MenuItem\r\n                    key={page.title}\r\n                    onClick={() => handleCloseNavMenu(page)}\r\n                  >\r\n                    <Typography textAlign=\"center\">{page.title}</Typography>\r\n                  </MenuItem>\r\n                ))}\r\n              </Menu>\r\n            </Box>\r\n            <Typography\r\n              variant=\"h6\"\r\n              noWrap\r\n              component=\"div\"\r\n              sx={{ flexGrow: 1, display: { xs: \"flex\", md: \"none\" } }}\r\n            >\r\n              National Parks\r\n            </Typography>\r\n            <Box sx={{ flexGrow: 1, display: { xs: \"none\", md: \"flex\" } }}>\r\n              {pages.map((page) => (\r\n                <Button\r\n                  key={page.title}\r\n                  onClick={() => handleCloseNavMenu(page)}\r\n                  sx={{ my: 2, color: \"white\", display: \"block\" }}\r\n                >\r\n                  {page.title}\r\n                </Button>\r\n              ))}\r\n            </Box>\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { DisplayParkContext } from \"../State/displayParkContext\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { CardActionArea } from \"@mui/material\";\r\nimport LocationOnIcon from \"@mui/icons-material/LocationOn\";\r\nimport QueryBuilderIcon from \"@mui/icons-material/QueryBuilder\";\r\nimport { Button } from \"@mui/material\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport LocalPhoneIcon from \"@mui/icons-material/LocalPhone\";\r\nimport PropTypes from \"prop-types\";\r\nimport Stack from \"@mui/material/Stack\";\r\nimport { shadows } from \"@mui/system\";\r\nimport DirectionsIcon from \"@mui/icons-material/Directions\";\r\nimport Container from \"@mui/material/Container\";\r\nimport \"./explore.css\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport { ThingsTodoContext } from \"../State/thingsToDoContext\";\r\nimport weatherPic from \"../../Images/weather.png\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport MovingText from \"react-moving-text\";\r\nimport NPPic from \"../../Images/NationalParkPic.png\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItem from \"@mui/material/ListItem\";\r\nimport EmailIcon from \"@mui/icons-material/Email\";\r\nimport Divider from \"@mui/material/Divider\";\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\r\nimport Alert from \"@mui/material/Alert\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\n\r\nexport const Explore = () => {\r\n  const parkContext = useContext(DisplayParkContext);\r\n  const [currPark, setCurrPark] = useState([]);\r\n  const [thingsTodoList, setThingsTodoList] = useState([]);\r\n  const [choice, setChoice] = useState(0);\r\n  const [alertData, setAlertData] = useState([{}]);\r\n\r\n  useEffect(() => {\r\n    getPark();\r\n  }, []);\r\n  function getPark() {\r\n    console.log([parkContext.parkState.parkCode]);\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/parks?parkCode=\r\n        ${parkContext.parkState.parkCode}\r\n      &api_key=${\"8yqhe2WFRMWYNZgBFRmxnub058irC6R85P9uUSIE\"}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setCurrPark(data.data));\r\n\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/alerts?parkCode=\r\n          ${parkContext.parkState.parkCode}\r\n        &api_key=${\"8yqhe2WFRMWYNZgBFRmxnub058irC6R85P9uUSIE\"}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setAlertData(data.data));\r\n\r\n    fetch(\r\n      `https://developer.nps.gov/api/v1/thingstodo?parkCode=${\r\n        parkContext.parkState.parkCode\r\n      }&api_key=${\"IwDmrGWpHFkUs5tLwy2Miv7L7M1nIoSndJyqltEk\"}`\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => setThingsTodoList(data.data));\r\n  }\r\n  return (\r\n    <div>\r\n      <img src={NPPic} alt={\"\"} width=\"100%\"></img>\r\n      {/* <Button onClick={() => getPark()}>hello</Button> */}\r\n      {/* <MovingAlerts alertData={alertData} /> */}\r\n\r\n      {currPark.length === 0 ? (\r\n        <div>loading...</div>\r\n      ) : (\r\n        <div>\r\n          <Grid\r\n            container\r\n            rowSpacing={1}\r\n            columnSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n          >\r\n            <Grid item xs={2} className=\"sideBar\">\r\n              <SideNav setChoice={setChoice} choice={choice} />\r\n            </Grid>\r\n            <Grid item xs={9.5}>\r\n              <Typography className=\"parkTitle\" variant=\"h2\" align=\"center\">\r\n                {parkContext.parkState.fullName}\r\n              </Typography>\r\n              <Divider />\r\n              {parkContext.parkState.parkCode === \"\" ? (\r\n                <div>Please Choose a Park...</div>\r\n              ) : (\r\n                <div className=\"main-content\">\r\n                  <Display\r\n                    choice={choice}\r\n                    park={parkContext.parkState}\r\n                    thingsTodoList={thingsTodoList}\r\n                    setThingsTodoList={setThingsTodoList}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Display = (props) => {\r\n  switch (props.choice) {\r\n    case 0:\r\n      return (\r\n        <ThingsToDo thingsTodoList={props.thingsTodoList} park={props.park} />\r\n      );\r\n    case 1:\r\n      return <Contact park={props.park} />;\r\n    case 2:\r\n      return <Arrival park={props.park}></Arrival>;\r\n    case 3:\r\n      return <Weather park={props.park} />;\r\n  }\r\n};\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`vertical-tabpanel-${index}`}\r\n      aria-labelledby={`vertical-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box sx={{ p: 3 }}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `vertical-tab-${index}`,\r\n    \"aria-controls\": `vertical-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst SideNav = (props) => {\r\n  function handleChange(event, newValue) {\r\n    props.setChoice(newValue);\r\n  }\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        flexGrow: 2,\r\n        bgcolor: \"background.paper\",\r\n        display: \"flex\",\r\n        // height: 224,\r\n        marginLeft: \"10%\",\r\n        marginTop: \"65%\",\r\n        boxShadow: 1,\r\n      }}\r\n    >\r\n      <Tabs\r\n        orientation=\"vertical\"\r\n        variant=\"scrollable\"\r\n        value={props.choice}\r\n        onChange={handleChange}\r\n        aria-label=\"Vertical tabs example\"\r\n      >\r\n        <Tab className=\"tab\" label=\"Things To Do\" {...a11yProps(0)} />\r\n        <Tab className=\"tab\" label=\"Contact\" {...a11yProps(1)} />\r\n        <Tab className=\"tab\" label=\"Arrival Info\" {...a11yProps(2)} />\r\n        <Tab className=\"tab\" label=\"Weather\" {...a11yProps(3)} />\r\n      </Tabs>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst ThingsToDo = (props) => {\r\n  const { thingsTodo, setThingsTodo } = useContext(ThingsTodoContext);\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"centerItem\">\r\n        <Box\r\n          className=\"centerItem\"\r\n          sx={{\r\n            boxShadow: 2,\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\r\n            p: 10,\r\n            m: 1,\r\n            borderRadius: 2,\r\n            // textAlign: \"center\",\r\n            //width: \"90%\",\r\n            borderRight: \"auto\",\r\n            borderLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h4\" component=\"div\" align=\"center\">\r\n            Things To Do\r\n          </Typography>\r\n          {props.thingsTodoList.length !== 0 ? (\r\n            props.thingsTodoList.map((item, index) => (\r\n              <ThingToDoItem\r\n                key={index}\r\n                item={item}\r\n                thingsTodo={thingsTodo}\r\n                setThingsTodo={setThingsTodo}\r\n                park={props.park}\r\n              />\r\n            ))\r\n          ) : (\r\n            <div>No information found for the selected park</div>\r\n          )}\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ThingToDoItem = (props) => {\r\n  const [open, setOpen] = useState(false);\r\n  const [alertText, setAlertText] = useState(\"Added!\");\r\n  const [alertType, setAlertType] = useState(\"success\");\r\n  function addToItinerary() {\r\n    const tempList = [...props.thingsTodo.list];\r\n    const index = tempList.findIndex((todo) => todo.id === props.item.id);\r\n    if (index === -1) {\r\n      const newThingsTodo = [\r\n        ...props.thingsTodo.list,\r\n        {\r\n          id: props.item.id,\r\n          name: props.item.title,\r\n          description: props.item.shortDescription,\r\n          reservation: props.item.isReservationRequired,\r\n          image: props.item.images[0].url,\r\n        },\r\n      ];\r\n      props.setThingsTodo({ name: props.park.fullName, list: newThingsTodo });\r\n      setAlertText(\"Added!\");\r\n      setAlertType(\"success\");\r\n    } else {\r\n      setAlertText(\"Already in Itinerary\");\r\n      setAlertType(\"info\");\r\n    }\r\n    setOpen(true);\r\n  }\r\n  return (\r\n    <div>\r\n      <Stack paddingTop=\"5%\" direction=\"row\" spacing={2}>\r\n        <div>\r\n          <img\r\n            minHeight=\"325px\"\r\n            minWidth=\"400px\"\r\n            height=\"325px\"\r\n            width=\"400px\"\r\n            className=\"thingstodo-image\"\r\n            // src={props.item.images[0].crops[0].url}\r\n            src={props.item.images[0].url}\r\n            alt={props.item.images[0].altText}\r\n          ></img>\r\n        </div>\r\n\r\n        <div className=\"desc-text-and-button\">\r\n          <div className=\"description-text\">\r\n            <Typography\r\n              fontWeight=\"bold\"\r\n              sx={{\r\n                fontFamily: \"Helvetica\",\r\n              }}\r\n            >\r\n              {props.item.title}\r\n            </Typography>\r\n            <Typography sx={{ fontStyle: \"italic\", paddingBottom: \"3%\" }}>\r\n              Reservation Required:\r\n              {props.item.isReservationRequired === \"true\" ? \" Yes\" : \" No\"}\r\n            </Typography>\r\n            <Typography>{props.item.shortDescription}</Typography>\r\n          </div>\r\n          <div className=\"add-button-wrapper\">\r\n            <Button\r\n              variant=\"contained\"\r\n              sx={{ backgroundColor: \"#4B90F0\" }}\r\n              onClick={() => addToItinerary()}\r\n            >\r\n              Add To Itinerary\r\n            </Button>\r\n          </div>\r\n          <div className=\"added-to-itinerary-alert\">\r\n            <AddedToItineraryAlert\r\n              open={open}\r\n              setOpen={setOpen}\r\n              alertText={alertText}\r\n              alertType={alertType}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Stack>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AddedToItineraryAlert = (props) => {\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Collapse in={props.open}>\r\n        <Alert\r\n          severity={props.alertType}\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={() => {\r\n                props.setOpen(false);\r\n              }}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n          sx={{ mb: 2 }}\r\n        >\r\n          {props.alertText}\r\n        </Alert>\r\n      </Collapse>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Weather = (props) => {\r\n  return (\r\n    <div className=\"centerItem\">\r\n      <Card className=\"centerItem\" sx={{ width: \"80%\", marginTop: \".8%\" }}>\r\n        <CardActionArea>\r\n          <CardContent sx={{ paddingTop: \"8%\" }}>\r\n            <Typography\r\n              gutterBottom\r\n              variant=\"h4\"\r\n              component=\"div\"\r\n              align=\"center\"\r\n            >\r\n              Weather\r\n            </Typography>\r\n            <Typography variant=\"h6\" color=\"text.secondary\" align=\"center\">\r\n              {props.park.weatherInfo}\r\n            </Typography>\r\n          </CardContent>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"180\"\r\n            image={weatherPic}\r\n            alt=\"Weather Pic\"\r\n          />\r\n        </CardActionArea>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n// const MovingAlerts = (props) => {\r\n//   return (\r\n//     <div>\r\n//       <MovingText\r\n//         className=\"movingText\"\r\n//         type=\"slideOutToRight\"\r\n//         duration=\"50s\"\r\n//         delay=\"0s\"\r\n//         direction=\"normal\"\r\n//         timing=\"ease\"\r\n//         iteration=\"infinite\"\r\n//         fillMode=\"none\"\r\n//       >\r\n//         {props.alertData[0].title}\r\n//       </MovingText>\r\n//     </div>\r\n//   );\r\n// };\r\nconst Contact = (props) => {\r\n  return (\r\n    <div>\r\n      <Container className=\"centerItem\">\r\n        <Box\r\n          sx={{\r\n            boxShadow: 2,\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\r\n            p: 10,\r\n            m: 1,\r\n            borderRadius: 2,\r\n            // textAlign: \"center\",\r\n            width: \"85%\",\r\n            borderRight: \"auto\",\r\n            borderLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h4\" component=\"div\" align=\"center\">\r\n            Contact\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Phone\r\n            </Typography>\r\n            <List>\r\n              {props.park.contacts.phoneNumbers.map((item, index) => (\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <LocalPhoneIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={item.phoneNumber} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n          <div>\r\n            <Typography sx={{ mt: 2 }} variant=\"h5\" component=\"div\">\r\n              Email\r\n            </Typography>\r\n            <List>\r\n              {props.park.contacts.emailAddresses.map((item, index) => (\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <EmailIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText primary={item.emailAddress} />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Addresses\r\n            </Typography>\r\n            <List>\r\n              {props.park.addresses.map((item, index) => (\r\n                <ListItem>\r\n                  <ListItemIcon>\r\n                    <LocationOnIcon />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={\r\n                      (item.line2 && item.line2 + \": \") +\r\n                      item.line1 +\r\n                      \"\\n\" +\r\n                      item.city +\r\n                      \", \" +\r\n                      item.stateCode +\r\n                      \" \" +\r\n                      item.postalCode\r\n                    }\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </div>\r\n          <div>\r\n            <Typography sx={{ mt: 2 }} variant=\"h5\" component=\"div\">\r\n              Directions\r\n            </Typography>\r\n            <List>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <DirectionsIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={props.park.directionsInfo} />\r\n              </ListItem>\r\n            </List>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Arrival = (props) => {\r\n  return (\r\n    <div>\r\n      <Container className=\"centerItem\">\r\n        <Box\r\n          className=\"centerItem\"\r\n          sx={{\r\n            boxShadow: 2,\r\n            bgcolor: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\r\n            color: (theme) =>\r\n              theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\r\n            p: 10,\r\n            m: 1,\r\n            borderRadius: 2,\r\n            // textAlign: \"center\",\r\n            width: \"85%\",\r\n            borderRight: \"auto\",\r\n            borderLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginLeft: \"auto\",\r\n          }}\r\n        >\r\n          <Typography gutterBottom variant=\"h4\" component=\"div\" align=\"center\">\r\n            Arrival Info\r\n          </Typography>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Operating Hours\r\n            </Typography>\r\n            {props.park.operatingHours.map((item, index) => (\r\n              <List>\r\n                <ListItem key={index}>\r\n                  <ListItemText primary={item.description} />\r\n                </ListItem>\r\n                <ListItem className=\"operating-hours-info\" key={index}>\r\n                  <ListItemText\r\n                    primary={\"Sunday: \" + item.standardHours.sunday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem className=\"operating-hours-info\" key={index}>\r\n                  <ListItemText\r\n                    primary={\"Monday: \" + item.standardHours.monday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem className=\"operating-hours-info\" key={index}>\r\n                  <ListItemText\r\n                    primary={\"Tuesday: \" + item.standardHours.tuesday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index} className=\"operating-hours-info\">\r\n                  <ListItemText\r\n                    primary={\"Wednesday: \" + item.standardHours.wednesday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index} className=\"operating-hours-info\">\r\n                  <ListItemText\r\n                    primary={\"Thursday: \" + item.standardHours.thursday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index} className=\"operating-hours-info\">\r\n                  <ListItemText\r\n                    primary={\"Friday: \" + item.standardHours.friday}\r\n                  />\r\n                </ListItem>\r\n                <ListItem key={index} className=\"operating-hours-info\">\r\n                  <ListItemText\r\n                    primary={\"Saturday: \" + item.standardHours.saturday}\r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            ))}\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Entrance Fees\r\n            </Typography>\r\n            <List>\r\n              {props.park.entranceFees.map((item, index) => (\r\n                <div>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Title: \" + item.title} />\r\n                  </ListItem>\r\n\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Descrption: \" + item.description} />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Cost: $\" + item.cost} />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n          <div>\r\n            <Typography variant=\"h5\" component=\"div\">\r\n              Entrance Passes\r\n            </Typography>\r\n            <List>\r\n              {props.park.entrancePasses.map((item, index) => (\r\n                <div>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Title: \" + item.title} />\r\n                  </ListItem>\r\n\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Descrption: \" + item.description} />\r\n                  </ListItem>\r\n                  <ListItem>\r\n                    <ListItemText primary={\"Cost: $\" + item.cost} />\r\n                  </ListItem>\r\n                  <Divider />\r\n                </div>\r\n              ))}\r\n            </List>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { Typography, Stack, Button } from \"@mui/material\";\r\nimport { ThingsTodoContext } from \"../State/thingsToDoContext\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport \"./itinerary.css\";\r\n\r\nexport const Itinerary = () => {\r\n  const { thingsTodo, setThingsTodo } = useContext(ThingsTodoContext);\r\n\r\n  return (\r\n    <Container>\r\n      <Box\r\n        sx={{\r\n          boxShadow: 3,\r\n          bgcolor: (theme) =>\r\n            theme.palette.mode === \"dark\" ? \"#101010\" : \"#fff\",\r\n          color: (theme) =>\r\n            theme.palette.mode === \"dark\" ? \"grey.300\" : \"grey.800\",\r\n          p: 10,\r\n          m: 5,\r\n          borderRadius: 2,\r\n          //textAlign: \"center\",\r\n          width: \"80%\",\r\n          marginRight: \"auto\",\r\n          marginLeft: \"auto\",\r\n        }}\r\n      >\r\n        <Typography sx={{ fontFamily: \"Georgia\" }} variant=\"h3\" align=\"center\">\r\n          My {\" \" + thingsTodo.name + \" \"} Itinerary\r\n        </Typography>\r\n        {/* <Button>Hello</Button> */}\r\n\r\n        <DisplayThingsTodo thingsTodo={thingsTodo} />\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst DisplayThingsTodo = (props) => {\r\n  return (\r\n    <div>\r\n      {props.thingsTodo.list.map((item, index) => (\r\n        <div>\r\n          <Stack\r\n            className=\"itineraryList\"\r\n            width=\"70%\"\r\n            paddingTop=\"5%\"\r\n            direction=\"row\"\r\n            spacing={8}\r\n          >\r\n            <CardMedia\r\n              component=\"img\"\r\n              image={item.image}\r\n              alt=\"parkImage\"\r\n              className=\"roundImage\"\r\n            />\r\n            <div>\r\n              <Typography\r\n                fontWeight=\"bold\"\r\n                sx={{\r\n                  fontFamily: \"Georgia\",\r\n                  color: \"#13352C\",\r\n                  fontSize: \"1.2em\",\r\n                }}\r\n              >\r\n                {item.name}\r\n              </Typography>\r\n              <Typography>{item.description}</Typography>\r\n            </div>\r\n          </Stack>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport BottomNavigation from \"@mui/material/BottomNavigation\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport \"./footer.css\";\r\n\r\nexport const Footer = () => {\r\n  return (\r\n    <Box\r\n      sx={{ position: \"fixed\", bottom: 0, left: 0, right: 0, width: \"100%\" }}\r\n      elevation={3}\r\n    >\r\n      <CssBaseline />\r\n      <BottomNavigation\r\n        showLabels\r\n        sx={{ backgroundColor: \"#242B17\", color: \"white\", height: \"80%\" }}\r\n      >\r\n        <div>© 2022 All Rights Reserved, AP</div>\r\n      </BottomNavigation>\r\n    </Box>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Collapse from \"@mui/material/Collapse\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport FavoriteBorderIcon from \"@mui/icons-material/FavoriteBorder\";\r\nimport { DisplayParkContext } from \"../State/displayParkContext\";\r\nimport { WishListContext } from \"../State/wishListContext\";\r\nimport { WishListProvider } from \"../State/wishListContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport SwipeableViews from \"react-swipeable-views\";\r\nimport { autoPlay } from \"react-swipeable-views-utils\";\r\nimport RemoveCircleOutlineIcon from \"@mui/icons-material/RemoveCircleOutline\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport Divider from \"@mui/material/Divider\";\r\n\r\nimport {\r\n  Button,\r\n  CardActionArea,\r\n  CardActions,\r\n  Paper,\r\n  Slide,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  Grid,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport Box from \"@mui/material/Box\";\r\n\r\nexport const WishList = () => {\r\n  const { wishList, setWishList } = useContext(WishListContext);\r\n\r\n  return (\r\n    <div className=\"mainDiv\">\r\n      <NationalParks wishList={wishList} setWishList={setWishList} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParks = (props) => {\r\n  return (\r\n    <div>\r\n      <Box\r\n        sx={{\r\n          margin: \"5%\",\r\n          display: \"block\",\r\n          alignItems: \"center\",\r\n        }}\r\n      >\r\n        <Typography align=\"center\" variant=\"h4\">\r\n          My National Park Wish List\r\n        </Typography>\r\n        <Divider variant=\"middle\" />\r\n      </Box>\r\n      <Box\r\n        display=\"flex\"\r\n        alignItems=\"center\"\r\n        sx={{\r\n          marginRight: \"auto\",\r\n          marginLeft: \"auto\",\r\n          width: \"95%\",\r\n          marginTop: \"4%\",\r\n        }}\r\n      >\r\n        <Grid container spacing={4}>\r\n          {props.wishList.length === 0 ? (\r\n            <div>WishList is Empty.</div>\r\n          ) : (\r\n            props.wishList.map((item, index) => (\r\n              <NationalParksCard\r\n                key={index}\r\n                item={item}\r\n                index={index}\r\n                setWishList={props.setWishList}\r\n                wishList={props.wishList}\r\n              />\r\n            ))\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst NationalParksCard = (props) => {\r\n  function removeFromWishList() {\r\n    const tempList = [...props.wishList];\r\n    const index = tempList.findIndex((park) => park.id === props.item.id);\r\n    tempList.splice(index, 1);\r\n    props.setWishList(tempList);\r\n  }\r\n  return (\r\n    <Grid item xs={3}>\r\n      {console.log(props.item)}\r\n      <Card\r\n        sx={{\r\n          maxWidth: 345,\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n        key={props.index}\r\n      >\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            height=\"140\"\r\n            image={props.item.images[0].url}\r\n            alt=\"park\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n              {props.item.fullName}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\"></Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions className=\"cardActions\">\r\n          <Tooltip title=\"Remove from Wish List\">\r\n            <IconButton onClick={() => removeFromWishList()}>\r\n              <RemoveCircleOutlineIcon\r\n                sx={{ color: \"#1272D1\", \"&:hover\": { color: \"red\" } }}\r\n              />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <QuickView item={props.item} />\r\n        </CardActions>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nconst QuickView = (props) => {\r\n  const [open, setOpen] = React.useState(false);\r\n  const { park, setPark } = useContext(DisplayParkContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const explorePark = () => {\r\n    setPark(props.item);\r\n    navigate(\"/explore\");\r\n  };\r\n  return (\r\n    <div>\r\n      <Button size=\"small\" color=\"primary\" onClick={handleClickOpen}>\r\n        Quick View\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <Carousel item={props.item} />\r\n        <DialogTitle>{props.item.fullName}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            {props.item.description}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Close</Button>\r\n          <Button\r\n            onClick={() => {\r\n              explorePark();\r\n            }}\r\n          >\r\n            Exlore Park\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst AutoPlaySwipeableViews = autoPlay(SwipeableViews);\r\n\r\nfunction Carousel(props) {\r\n  const theme = useTheme();\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n  const handleStepChange = (step) => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ /* maxWidth: 400,*/ flexGrow: 1 }}>\r\n      <AutoPlaySwipeableViews\r\n        axis={theme.direction === \"rtl\" ? \"x-reverse\" : \"x\"}\r\n        index={activeStep}\r\n        onChangeIndex={handleStepChange}\r\n        enableMouseEvents\r\n      >\r\n        {props.item.images.map((step, index) => (\r\n          <div key={step.id}>\r\n            {Math.abs(activeStep - index) <= 2 ? (\r\n              <Box\r\n                component=\"img\"\r\n                sx={{\r\n                  height: 300,\r\n                  display: \"block\",\r\n                  // maxWidth: 400,\r\n                  overflow: \"hidden\",\r\n                  width: \"100%\",\r\n                }}\r\n                src={step.url}\r\n                alt={step.altText}\r\n              />\r\n            ) : null}\r\n          </div>\r\n        ))}\r\n      </AutoPlaySwipeableViews>\r\n    </Box>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport {Home} from '../Home/home';\r\nimport {Header} from '../Header/header';\r\nimport {Explore} from '../explore/explore'\r\nimport {Itinerary } from '../itinerary/itinerary';\r\nimport {Footer} from  '../Footer/footer'\r\nimport {WishList} from '../WishList/wishList'\r\nimport {DisplayParkProvider} from \"../State/displayParkContext\";\r\nimport {WishListProvider } from '../State/wishListContext';\r\nimport {ThingsTodoProvider} from '../State/thingsToDoContext';\r\nimport {HashRouter, Routes, Route,} from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <DisplayParkProvider>\r\n        <WishListProvider>\r\n          <ThingsTodoProvider>\r\n          <HashRouter>\r\n            <Header/>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Home />} />\r\n               <Route path=\"/explore\" element={<Explore />} />  \r\n                <Route path=\"/itinerary\" element={<Itinerary />} /> \r\n                <Route path=\"/wishList\" element={<WishList />} /> \r\n            </Routes>\r\n            <Footer />\r\n          </HashRouter>\r\n          </ThingsTodoProvider>\r\n          </WishListProvider>\r\n        </DisplayParkProvider >\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from '../src/Components/App/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}